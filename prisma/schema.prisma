generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Character {
  name            String                    @id
  stars           Int
  element         String
  weaponType      String
  region          String
  book            String
  weeklyBoss      String
  crystal         String
  bossMaterial    String
  localSpeciality String
  enemyDrop       String
  description     String
  url             String
  added           Int
  artifactSets    CharacterArtifactSets[]
  artifacts       CharacterArtifactStats[]
  constellations  CharacterConstellations[]
  talents         CharacterTalents[]
  weapons         CharacterWeapons[]
  passives        Passives[]
}

model Weapon {
  name               String             @id
  stars              String
  type               String
  baseATK            Int
  secondStat         String
  secondStatValue    String
  passive            String
  passiveDescription String
  characters         CharacterWeapons[]
}

model CharacterWeapons {
  id            Int       @id @default(autoincrement())
  characterName String
  weaponName    String
  build         String?
  character     Character @relation(fields: [characterName], references: [name])
  weapon        Weapon    @relation(fields: [weaponName], references: [name])
}

model CharacterArtifactStats {
  id            Int       @id @default(autoincrement())
  characterName String
  flower        String
  plume         String
  sands         String
  goblet        String
  circlet       String
  subStats      String
  build         String
  character     Character @relation(fields: [characterName], references: [name])
}

model Artifacts {
  name       String                  @id
  twoPiece   String
  fourPiece  String
  characters CharacterArtifactSets[]
}

model CharacterArtifactSets {
  id            Int       @id @default(autoincrement())
  characterName String
  artifactName  String
  build         String
  artifact      Artifacts @relation(fields: [artifactName], references: [name])
  character     Character @relation(fields: [characterName], references: [name])
}

model CharacterTalents {
  id                Int                @id @default(autoincrement())
  characterName     String
  talentType        String
  talentName        String
  talentDesciprtion String
  character         Character          @relation(fields: [characterName], references: [name])
  parameters        Parameters[]
  talentParameters  TalentParameters[]
}

model CharacterConstellations {
  id                       Int       @id @default(autoincrement())
  characterName            String
  constellationName        String
  constellationDescription String
  character                Character @relation(fields: [characterName], references: [name])
}

model Parameters {
  id              Int               @id @default(autoincrement())
  talentId        Int
  parameterName   String
  parameterValues ParameterValues[]
  talent          CharacterTalents  @relation(fields: [talentId], references: [id])
}

model ParameterValues {
  id          Int        @id @default(autoincrement())
  parameterId Int
  level       Int
  value       String
  pName       Parameters @relation(fields: [parameterId], references: [id])
}

model TalentParameters {
  id            Int              @id @default(autoincrement())
  talentId      Int
  parameterName String
  lv1           String
  lv2           String
  lv3           String
  lv4           String
  lv5           String
  lv6           String
  lv7           String
  lv8           String
  lv9           String
  lv10          String
  lv11          String
  lv12          String
  lv13          String
  lv14          String
  lv15          String
  talent        CharacterTalents @relation(fields: [talentId], references: [id])
}

model Passives {
  id                 Int       @id @default(autoincrement())
  characterName      String
  passiveName        String
  passiveDescription String
  passiveType        String
  character          Character @relation(fields: [characterName], references: [name])
}
